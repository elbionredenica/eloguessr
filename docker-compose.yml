version: "3"

services:
  db:
    image: postgres:15-alpine
    container_name: rating-guessr-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: rating-guessr-backend
    restart: always
    depends_on:
      db:
        condition: service_started
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    networks:
      - app_net

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_API_BASE_URL=${FRONTEND_API_BASE_URL}
    container_name: rating-guessr-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - FRONTEND_API_BASE_URL=/api/
      - REACT_APP_API_BASE_URL=/api/
    networks:
      - app_net

  proxy:
    image: nginx:alpine
    container_name: rating-guessr-proxy
    restart: always
    ports:
      - "80:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - app_net

volumes:
  postgres_data: 
    driver: local

networks:
  app_net:
    driver: bridge